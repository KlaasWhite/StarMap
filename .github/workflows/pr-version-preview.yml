name: PR Version Preview

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  preview:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout full history and all tags
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      # 2Ô∏è‚É£ Get latest tag and calculate next version
      - name: Get latest tag and bump type
        id: version
        run: |
          set +e
          git fetch --tags
          current=$(git describe --tags --abbrev=0 2>/dev/null)
          if [ -z "$current" ]; then
            echo "‚ö†Ô∏è No tags found, defaulting to v0.0.0"
            current="v0.0.0"
          fi
          set -e

          # Split into major.minor.patch
          IFS='.' read -r major minor patch <<< "${current#v}"

          # Determine bump type from PR labels
          LABELS="${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          if [[ "$LABELS" == *"major"* ]]; then
              ((major++))
              minor=0
              patch=0
              type="major"
          elif [[ "$LABELS" == *"minor"* ]]; then
              ((minor++))
              patch=0
              type="minor"
          else
              ((patch++))
              type="patch"
          fi

          # Construct next version
          next="v$major.$minor.$patch"
          echo "next=$next" >> $GITHUB_OUTPUT
          echo "type=$type" >> $GITHUB_OUTPUT

      # 3Ô∏è‚É£ Optional debug: show what tags exist and the next version
      - name: Debug current tags
        run: |
          echo "Git tags in this repo:"
          git tag -l
          echo "Next version: ${{ steps.version.outputs.next }}"

      # 4Ô∏è‚É£ Comment predicted version on PR
      - name: Comment version preview
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üß© **Version Preview**
            Current latest tag: `${{ steps.version.outputs.next }}`
            PR labels: `${{ join(github.event.pull_request.labels.*.name, ', ') }}`
            ‚û°Ô∏è **Predicted next version on merge:** **${{ steps.version.outputs.next }}**
